/*
 * generated by Xtext 2.13.0
 */
grammar InternalDefine;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.example.define.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.example.define.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.example.define.services.DefineGrammarAccess;

}
@parser::members {
	private DefineGrammarAccess grammarAccess;

	public void setGrammarAccess(DefineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDefineBlock
entryRuleDefineBlock
:
{ before(grammarAccess.getDefineBlockRule()); }
	 ruleDefineBlock
{ after(grammarAccess.getDefineBlockRule()); } 
	 EOF 
;

// Rule DefineBlock
ruleDefineBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineBlockAccess().getGroup()); }
		(rule__DefineBlock__Group__0)
		{ after(grammarAccess.getDefineBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectionBlock
entryRuleDirectionBlock
:
{ before(grammarAccess.getDirectionBlockRule()); }
	 ruleDirectionBlock
{ after(grammarAccess.getDirectionBlockRule()); } 
	 EOF 
;

// Rule DirectionBlock
ruleDirectionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getUnorderedGroup()); }
		(rule__DirectionBlock__UnorderedGroup)
		{ after(grammarAccess.getDirectionBlockAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInout
entryRuleInout
:
{ before(grammarAccess.getInoutRule()); }
	 ruleInout
{ after(grammarAccess.getInoutRule()); } 
	 EOF 
;

// Rule Inout
ruleInout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInoutAccess().getGroup()); }
		(rule__Inout__Group__0)
		{ after(grammarAccess.getInoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getAlternatives()); }
		(rule__Variable__Alternatives)
		{ after(grammarAccess.getVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getGroup()); }
		(rule__VariableDefinition__Group__0)
		{ after(grammarAccess.getVariableDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUdt
entryRuleUdt
:
{ before(grammarAccess.getUdtRule()); }
	 ruleUdt
{ after(grammarAccess.getUdtRule()); } 
	 EOF 
;

// Rule Udt
ruleUdt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUdtAccess().getGroup()); }
		(rule__Udt__Group__0)
		{ after(grammarAccess.getUdtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariant
entryRuleVariant
:
{ before(grammarAccess.getVariantRule()); }
	 ruleVariant
{ after(grammarAccess.getVariantRule()); } 
	 EOF 
;

// Rule Variant
ruleVariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariantAccess().getGroup()); }
		(rule__Variant__Group__0)
		{ after(grammarAccess.getVariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableType
entryRuleVariableType
:
{ before(grammarAccess.getVariableTypeRule()); }
	 ruleVariableType
{ after(grammarAccess.getVariableTypeRule()); } 
	 EOF 
;

// Rule VariableType
ruleVariableType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableTypeAccess().getAlternatives()); }
		(rule__VariableType__Alternatives)
		{ after(grammarAccess.getVariableTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getGroup_0()); }
		(rule__Variable__Group_0__0)
		{ after(grammarAccess.getVariableAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getUdtAssignment_1()); }
		(rule__Variable__UdtAssignment_1)
		{ after(grammarAccess.getVariableAccess().getUdtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_2()); }
		(rule__Variable__Group_2__0)
		{ after(grammarAccess.getVariableAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getSemicolonKeyword_2_0()); }
		';'
		{ after(grammarAccess.getVariableDefinitionAccess().getSemicolonKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getNextVariableAssignment_2_1()); }
		(rule__VariableDefinition__NextVariableAssignment_2_1)
		{ after(grammarAccess.getVariableDefinitionAccess().getNextVariableAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantAccess().getSemicolonKeyword_4_0()); }
		';'
		{ after(grammarAccess.getVariantAccess().getSemicolonKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariantAccess().getNextVariantAssignment_4_1()); }
		(rule__Variant__NextVariantAssignment_4_1)
		{ after(grammarAccess.getVariantAccess().getNextVariantAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableTypeAccess().getIntKeyword_0()); }
		'int'
		{ after(grammarAccess.getVariableTypeAccess().getIntKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getBoolKeyword_1()); }
		'bool'
		{ after(grammarAccess.getVariableTypeAccess().getBoolKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getFloatKeyword_2()); }
		'float'
		{ after(grammarAccess.getVariableTypeAccess().getFloatKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
		(rule__Expression__Group_2__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
		(rule__Expression__Group_3__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ValueAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getValueTrueKeyword_2_1_0_0()); }
		'true'
		{ after(grammarAccess.getExpressionAccess().getValueTrueKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getValueFalseKeyword_2_1_0_1()); }
		'false'
		{ after(grammarAccess.getExpressionAccess().getValueFalseKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__0__Impl
	rule__DefineBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getDefineKeyword_0()); }
	'define'
	{ after(grammarAccess.getDefineBlockAccess().getDefineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__1__Impl
	rule__DefineBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDefineBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__2__Impl
	rule__DefineBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getDirectionAssignment_2()); }
	(rule__DefineBlock__DirectionAssignment_2)
	{ after(grammarAccess.getDefineBlockAccess().getDirectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDefineBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputAction_1()); }
	()
	{ after(grammarAccess.getInputAccess().getInputAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getInputAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
	rule__Input__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputVariablesAssignment_3()); }
	(rule__Input__InputVariablesAssignment_3)*
	{ after(grammarAccess.getInputAccess().getInputVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getInputAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inout__Group__0__Impl
	rule__Inout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInoutAccess().getInoutKeyword_0()); }
	'inout'
	{ after(grammarAccess.getInoutAccess().getInoutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inout__Group__1__Impl
	rule__Inout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInoutAccess().getInoutAction_1()); }
	()
	{ after(grammarAccess.getInoutAccess().getInoutAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inout__Group__2__Impl
	rule__Inout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInoutAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getInoutAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inout__Group__3__Impl
	rule__Inout__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInoutAccess().getInoutVariablesAssignment_3()); }
	(rule__Inout__InoutVariablesAssignment_3)*
	{ after(grammarAccess.getInoutAccess().getInoutVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inout__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInoutAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getInoutAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputAction_1()); }
	()
	{ after(grammarAccess.getOutputAccess().getOutputAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getOutputAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
	rule__Output__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputVariablesAssignment_3()); }
	(rule__Output__OutputVariablesAssignment_3)*
	{ after(grammarAccess.getOutputAccess().getOutputVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getOutputAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_0__0__Impl
	rule__Variable__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableTypeAssignment_0_0()); }
	(rule__Variable__VariableTypeAssignment_0_0)?
	{ after(grammarAccess.getVariableAccess().getVariableTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableDefinitionAssignment_0_1()); }
	(rule__Variable__VariableDefinitionAssignment_0_1)
	{ after(grammarAccess.getVariableAccess().getVariableDefinitionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_2__0__Impl
	rule__Variable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariantKeyword_2_0()); }
	('variant')?
	{ after(grammarAccess.getVariableAccess().getVariantKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariantAssignment_2_1()); }
	(rule__Variable__VariantAssignment_2_1)
	{ after(grammarAccess.getVariableAccess().getVariantAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__0__Impl
	rule__VariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVariableNameAssignment_0()); }
	(rule__VariableDefinition__VariableNameAssignment_0)
	{ after(grammarAccess.getVariableDefinitionAccess().getVariableNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__1__Impl
	rule__VariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getGroup_1()); }
	(rule__VariableDefinition__Group_1__0)?
	{ after(grammarAccess.getVariableDefinitionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getAlternatives_2()); }
	(rule__VariableDefinition__Alternatives_2)
	{ after(grammarAccess.getVariableDefinitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__0__Impl
	rule__VariableDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getVariableDefinitionAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__1__Impl
	rule__VariableDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getExpressionAssignment_1_1()); }
	(rule__VariableDefinition__ExpressionAssignment_1_1)
	{ after(grammarAccess.getVariableDefinitionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getGroup_1_2()); }
	(rule__VariableDefinition__Group_1_2__0)?
	{ after(grammarAccess.getVariableDefinitionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1_2__0__Impl
	rule__VariableDefinition__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getPlusSignSolidusHyphenMinusKeyword_1_2_0()); }
	'+/-'
	{ after(grammarAccess.getVariableDefinitionAccess().getPlusSignSolidusHyphenMinusKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getRangeAssignment_1_2_1()); }
	(rule__VariableDefinition__RangeAssignment_1_2_1)
	{ after(grammarAccess.getVariableDefinitionAccess().getRangeAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Udt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__0__Impl
	rule__Udt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtKeyword_0()); }
	'udt'
	{ after(grammarAccess.getUdtAccess().getUdtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__1__Impl
	rule__Udt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtNameAssignment_1()); }
	(rule__Udt__UdtNameAssignment_1)
	{ after(grammarAccess.getUdtAccess().getUdtNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__2__Impl
	rule__Udt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getUdtAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__3__Impl
	rule__Udt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtTypeAssignment_3()); }
	(rule__Udt__UdtTypeAssignment_3)
	{ after(grammarAccess.getUdtAccess().getUdtTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__4__Impl
	rule__Udt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getUdtAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__5__Impl
	rule__Udt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getUdtAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__6__Impl
	rule__Udt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtVariablesAssignment_6()); }
	(rule__Udt__UdtVariablesAssignment_6)*
	{ after(grammarAccess.getUdtAccess().getUdtVariablesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getUdtAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variant__Group__0__Impl
	rule__Variant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantAccess().getVariantNameAssignment_0()); }
	(rule__Variant__VariantNameAssignment_0)
	{ after(grammarAccess.getVariantAccess().getVariantNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variant__Group__1__Impl
	rule__Variant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getVariantAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variant__Group__2__Impl
	rule__Variant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantAccess().getVariantTypeAssignment_2()); }
	(rule__Variant__VariantTypeAssignment_2)
	{ after(grammarAccess.getVariantAccess().getVariantTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variant__Group__3__Impl
	rule__Variant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getVariantAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantAccess().getAlternatives_4()); }
	(rule__Variant__Alternatives_4)
	{ after(grammarAccess.getVariantAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getValueAssignment_0_1()); }
	(rule__Expression__ValueAssignment_0_1)
	{ after(grammarAccess.getExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getValueAssignment_1_1()); }
	(rule__Expression__ValueAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getBoolConstantAction_2_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getBoolConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getValueAssignment_2_1()); }
	(rule__Expression__ValueAssignment_2_1)
	{ after(grammarAccess.getExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getVariableRefAction_3_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getVariableRefAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getVariableAssignment_3_1()); }
	(rule__Expression__VariableAssignment_3_1)
	{ after(grammarAccess.getExpressionAccess().getVariableAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectionBlock__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getDirectionBlockAccess().getUnorderedGroup());
	}
:
	rule__DirectionBlock__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getDirectionBlockAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getDirectionBlockAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDirectionBlockAccess().getInputAssignment_0()); }
					(rule__DirectionBlock__InputAssignment_0)
					{ after(grammarAccess.getDirectionBlockAccess().getInputAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDirectionBlockAccess().getInoutAssignment_1()); }
					(rule__DirectionBlock__InoutAssignment_1)
					{ after(grammarAccess.getDirectionBlockAccess().getInoutAssignment_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDirectionBlockAccess().getOutputAssignment_2()); }
					(rule__DirectionBlock__OutputAssignment_2)
					{ after(grammarAccess.getDirectionBlockAccess().getOutputAssignment_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDirectionBlockAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionBlock__UnorderedGroup__Impl
	rule__DirectionBlock__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionBlock__UnorderedGroup__Impl
	rule__DirectionBlock__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionBlock__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__DefineBlock__DirectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineBlockAccess().getDirectionDirectionBlockParserRuleCall_2_0()); }
		ruleDirectionBlock
		{ after(grammarAccess.getDefineBlockAccess().getDirectionDirectionBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__InputAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getInputInputParserRuleCall_0_0()); }
		ruleInput
		{ after(grammarAccess.getDirectionBlockAccess().getInputInputParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__InoutAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getInoutInoutParserRuleCall_1_0()); }
		ruleInout
		{ after(grammarAccess.getDirectionBlockAccess().getInoutInoutParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__OutputAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getOutputOutputParserRuleCall_2_0()); }
		ruleOutput
		{ after(grammarAccess.getDirectionBlockAccess().getOutputOutputParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__InputVariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getInputVariablesVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getInputAccess().getInputVariablesVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inout__InoutVariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInoutAccess().getInoutVariablesVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getInoutAccess().getInoutVariablesVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OutputVariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getOutputVariablesVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getOutputAccess().getOutputVariablesVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariableTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariableTypeVariableTypeParserRuleCall_0_0_0()); }
		ruleVariableType
		{ after(grammarAccess.getVariableAccess().getVariableTypeVariableTypeParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariableDefinitionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariableDefinitionVariableDefinitionParserRuleCall_0_1_0()); }
		ruleVariableDefinition
		{ after(grammarAccess.getVariableAccess().getVariableDefinitionVariableDefinitionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__UdtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getUdtUdtParserRuleCall_1_0()); }
		ruleUdt
		{ after(grammarAccess.getVariableAccess().getUdtUdtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariantAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariantVariantParserRuleCall_2_1_0()); }
		ruleVariant
		{ after(grammarAccess.getVariableAccess().getVariantVariantParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VariableNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVariableNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVariableNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDefinitionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__RangeAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getRangeExpressionParserRuleCall_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDefinitionAccess().getRangeExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__NextVariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getNextVariableCommaKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getVariableDefinitionAccess().getNextVariableCommaKeyword_2_1_0()); }
			','
			{ after(grammarAccess.getVariableDefinitionAccess().getNextVariableCommaKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getVariableDefinitionAccess().getNextVariableCommaKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__UdtNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtAccess().getUdtNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUdtAccess().getUdtNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__UdtTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtAccess().getUdtTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getUdtAccess().getUdtTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__UdtVariablesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtAccess().getUdtVariablesVariableParserRuleCall_6_0()); }
		ruleVariable
		{ after(grammarAccess.getUdtAccess().getUdtVariablesVariableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__VariantNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantAccess().getVariantNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariantAccess().getVariantNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__VariantTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantAccess().getVariantTypeVariableTypeParserRuleCall_2_0()); }
		ruleVariableType
		{ after(grammarAccess.getVariantAccess().getVariantTypeVariableTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__NextVariantAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantAccess().getNextVariantCommaKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getVariantAccess().getNextVariantCommaKeyword_4_1_0()); }
			','
			{ after(grammarAccess.getVariantAccess().getNextVariantCommaKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getVariantAccess().getNextVariantCommaKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getValueAlternatives_2_1_0()); }
		(rule__Expression__ValueAlternatives_2_1_0)
		{ after(grammarAccess.getExpressionAccess().getValueAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__VariableAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getVariableVariableCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getVariableVariableIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExpressionAccess().getVariableVariableIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getExpressionAccess().getVariableVariableCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
