/*
 * generated by Xtext 2.14.0
 */
grammar InternalEis;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.eis.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.eis.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.eis.services.EisGrammarAccess;

}
@parser::members {
	private EisGrammarAccess grammarAccess;

	public void setGrammarAccess(EisGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEisModel
entryRuleEisModel
:
{ before(grammarAccess.getEisModelRule()); }
	 ruleEisModel
{ after(grammarAccess.getEisModelRule()); } 
	 EOF 
;

// Rule EisModel
ruleEisModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEisModelAccess().getGroup()); }
		(rule__EisModel__Group__0)
		{ after(grammarAccess.getEisModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestcase
entryRuleTestcase
:
{ before(grammarAccess.getTestcaseRule()); }
	 ruleTestcase
{ after(grammarAccess.getTestcaseRule()); } 
	 EOF 
;

// Rule Testcase
ruleTestcase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestcaseAccess().getGroup()); }
		(rule__Testcase__Group__0)
		{ after(grammarAccess.getTestcaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestblock
entryRuleTestblock
:
{ before(grammarAccess.getTestblockRule()); }
	 ruleTestblock
{ after(grammarAccess.getTestblockRule()); } 
	 EOF 
;

// Rule Testblock
ruleTestblock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestblockAccess().getGroup()); }
		(rule__Testblock__Group__0)
		{ after(grammarAccess.getTestblockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolConstant
entryRuleBoolConstant
:
{ before(grammarAccess.getBoolConstantRule()); }
	 ruleBoolConstant
{ after(grammarAccess.getBoolConstantRule()); } 
	 EOF 
;

// Rule BoolConstant
ruleBoolConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolConstantAccess().getValueAssignment()); }
		(rule__BoolConstant__ValueAssignment)
		{ after(grammarAccess.getBoolConstantAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockConstant
entryRuleBlockConstant
:
{ before(grammarAccess.getBlockConstantRule()); }
	 ruleBlockConstant
{ after(grammarAccess.getBlockConstantRule()); } 
	 EOF 
;

// Rule BlockConstant
ruleBlockConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockConstantAccess().getValueAssignment()); }
		(rule__BlockConstant__ValueAssignment)
		{ after(grammarAccess.getBlockConstantAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefineBlock
entryRuleDefineBlock
:
{ before(grammarAccess.getDefineBlockRule()); }
	 ruleDefineBlock
{ after(grammarAccess.getDefineBlockRule()); } 
	 EOF 
;

// Rule DefineBlock
ruleDefineBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineBlockAccess().getGroup()); }
		(rule__DefineBlock__Group__0)
		{ after(grammarAccess.getDefineBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectionBlock
entryRuleDirectionBlock
:
{ before(grammarAccess.getDirectionBlockRule()); }
	 ruleDirectionBlock
{ after(grammarAccess.getDirectionBlockRule()); } 
	 EOF 
;

// Rule DirectionBlock
ruleDirectionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getUnorderedGroup()); }
		(rule__DirectionBlock__UnorderedGroup)
		{ after(grammarAccess.getDirectionBlockAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInOut
entryRuleInOut
:
{ before(grammarAccess.getInOutRule()); }
	 ruleInOut
{ after(grammarAccess.getInOutRule()); } 
	 EOF 
;

// Rule InOut
ruleInOut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInOutAccess().getGroup()); }
		(rule__InOut__Group__0)
		{ after(grammarAccess.getInOutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariables
entryRuleVariables
:
{ before(grammarAccess.getVariablesRule()); }
	 ruleVariables
{ after(grammarAccess.getVariablesRule()); } 
	 EOF 
;

// Rule Variables
ruleVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariablesAccess().getAlternatives()); }
		(rule__Variables__Alternatives)
		{ after(grammarAccess.getVariablesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUdt
entryRuleUdt
:
{ before(grammarAccess.getUdtRule()); }
	 ruleUdt
{ after(grammarAccess.getUdtRule()); } 
	 EOF 
;

// Rule Udt
ruleUdt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUdtAccess().getGroup()); }
		(rule__Udt__Group__0)
		{ after(grammarAccess.getUdtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUdtRef
entryRuleUdtRef
:
{ before(grammarAccess.getUdtRefRule()); }
	 ruleUdtRef
{ after(grammarAccess.getUdtRefRule()); } 
	 EOF 
;

// Rule UdtRef
ruleUdtRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUdtRefAccess().getGroup()); }
		(rule__UdtRef__Group__0)
		{ after(grammarAccess.getUdtRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUdtType
entryRuleUdtType
:
{ before(grammarAccess.getUdtTypeRule()); }
	 ruleUdtType
{ after(grammarAccess.getUdtTypeRule()); } 
	 EOF 
;

// Rule UdtType
ruleUdtType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUdtTypeAccess().getNameAssignment()); }
		(rule__UdtType__NameAssignment)
		{ after(grammarAccess.getUdtTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTeststepBlock
entryRuleTeststepBlock
:
{ before(grammarAccess.getTeststepBlockRule()); }
	 ruleTeststepBlock
{ after(grammarAccess.getTeststepBlockRule()); } 
	 EOF 
;

// Rule TeststepBlock
ruleTeststepBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTeststepBlockAccess().getGroup()); }
		(rule__TeststepBlock__Group__0)
		{ after(grammarAccess.getTeststepBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertionBlock
entryRuleAssertionBlock
:
{ before(grammarAccess.getAssertionBlockRule()); }
	 ruleAssertionBlock
{ after(grammarAccess.getAssertionBlockRule()); } 
	 EOF 
;

// Rule AssertionBlock
ruleAssertionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionBlockAccess().getUnorderedGroup()); }
		(rule__AssertionBlock__UnorderedGroup)
		{ after(grammarAccess.getAssertionBlockAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSet
entryRuleSet
:
{ before(grammarAccess.getSetRule()); }
	 ruleSet
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule Set
ruleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetAccess().getGroup()); }
		(rule__Set__Group__0)
		{ after(grammarAccess.getSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssert
entryRuleAssert
:
{ before(grammarAccess.getAssertRule()); }
	 ruleAssert
{ after(grammarAccess.getAssertRule()); } 
	 EOF 
;

// Rule Assert
ruleAssert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertAccess().getGroup()); }
		(rule__Assert__Group__0)
		{ after(grammarAccess.getAssertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCascade
entryRuleCascade
:
{ before(grammarAccess.getCascadeRule()); }
	 ruleCascade
{ after(grammarAccess.getCascadeRule()); } 
	 EOF 
;

// Rule Cascade
ruleCascade 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCascadeAccess().getGroup()); }
		(rule__Cascade__Group__0)
		{ after(grammarAccess.getCascadeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdiom
entryRuleIdiom
:
{ before(grammarAccess.getIdiomRule()); }
	 ruleIdiom
{ after(grammarAccess.getIdiomRule()); } 
	 EOF 
;

// Rule Idiom
ruleIdiom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdiomAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getIdiomAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BasicType
ruleBasicType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolConstant__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolConstantAccess().getValueTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBoolConstantAccess().getValueTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolConstantAccess().getValueFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBoolConstantAccess().getValueFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockConstant__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockConstantAccess().getValueFCKeyword_0_0()); }
		'FC'
		{ after(grammarAccess.getBlockConstantAccess().getValueFCKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockConstantAccess().getValueFBKeyword_0_1()); }
		'FB'
		{ after(grammarAccess.getBlockConstantAccess().getValueFBKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariablesAccess().getVariableParserRuleCall_0()); }
		ruleVariable
		{ after(grammarAccess.getVariablesAccess().getVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariablesAccess().getUdtParserRuleCall_1()); }
		ruleUdt
		{ after(grammarAccess.getVariablesAccess().getUdtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariablesAccess().getUdtRefParserRuleCall_2()); }
		ruleUdtRef
		{ after(grammarAccess.getVariablesAccess().getUdtRefParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getSemicolonKeyword_5_0()); }
		';'
		{ after(grammarAccess.getVariableAccess().getSemicolonKeyword_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getNextVariableAssignment_5_1()); }
		(rule__Variable__NextVariableAssignment_5_1)
		{ after(grammarAccess.getVariableAccess().getNextVariableAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getBoolConstantParserRuleCall_2()); }
		ruleBoolConstant
		{ after(grammarAccess.getAtomicAccess().getBoolConstantParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
		(rule__Atomic__Group_5__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_6()); }
		(rule__Atomic__Group_6__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_7()); }
		(rule__Atomic__Group_7__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_8()); }
		(rule__Atomic__Group_8__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_9()); }
		(rule__Atomic__Group_9__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_10()); }
		(rule__Atomic__Group_10__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_11()); }
		(rule__Atomic__Group_11__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_11()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_12()); }
		(rule__Atomic__Group_12__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueLONGTerminalRuleCall_0_1_0_0()); }
		RULE_LONG
		{ after(grammarAccess.getAtomicAccess().getValueLONGTerminalRuleCall_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueNEGATIVE_LONGTerminalRuleCall_0_1_0_1()); }
		RULE_NEGATIVE_LONG
		{ after(grammarAccess.getAtomicAccess().getValueNEGATIVE_LONGTerminalRuleCall_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getNULLEnumLiteralDeclaration_0()); }
		('null')
		{ after(grammarAccess.getBasicTypeAccess().getNULLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getINTEnumLiteralDeclaration_1()); }
		('int')
		{ after(grammarAccess.getBasicTypeAccess().getINTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getBOOLEnumLiteralDeclaration_2()); }
		('bool')
		{ after(grammarAccess.getBasicTypeAccess().getBOOLEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getREALEnumLiteralDeclaration_3()); }
		('real')
		{ after(grammarAccess.getBasicTypeAccess().getREALEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getSTRINGEnumLiteralDeclaration_4()); }
		('string')
		{ after(grammarAccess.getBasicTypeAccess().getSTRINGEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getCHAREnumLiteralDeclaration_5()); }
		('char')
		{ after(grammarAccess.getBasicTypeAccess().getCHAREnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getBYTEEnumLiteralDeclaration_6()); }
		('byte')
		{ after(grammarAccess.getBasicTypeAccess().getBYTEEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getWORDEnumLiteralDeclaration_7()); }
		('word')
		{ after(grammarAccess.getBasicTypeAccess().getWORDEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getDWORDEnumLiteralDeclaration_8()); }
		('dword')
		{ after(grammarAccess.getBasicTypeAccess().getDWORDEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLWORDEnumLiteralDeclaration_9()); }
		('lword')
		{ after(grammarAccess.getBasicTypeAccess().getLWORDEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getUSINTEnumLiteralDeclaration_10()); }
		('usint')
		{ after(grammarAccess.getBasicTypeAccess().getUSINTEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getUINTEnumLiteralDeclaration_11()); }
		('uint')
		{ after(grammarAccess.getBasicTypeAccess().getUINTEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getUDINTEnumLiteralDeclaration_12()); }
		('udint')
		{ after(grammarAccess.getBasicTypeAccess().getUDINTEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getULINTEnumLiteralDeclaration_13()); }
		('ulint')
		{ after(grammarAccess.getBasicTypeAccess().getULINTEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getSINTEnumLiteralDeclaration_14()); }
		('sint')
		{ after(grammarAccess.getBasicTypeAccess().getSINTEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getDINTEnumLiteralDeclaration_15()); }
		('dint')
		{ after(grammarAccess.getBasicTypeAccess().getDINTEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLINTEnumLiteralDeclaration_16()); }
		('lint')
		{ after(grammarAccess.getBasicTypeAccess().getLINTEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTIMEEnumLiteralDeclaration_17()); }
		('time')
		{ after(grammarAccess.getBasicTypeAccess().getTIMEEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLTIMEEnumLiteralDeclaration_18()); }
		('ltime')
		{ after(grammarAccess.getBasicTypeAccess().getLTIMEEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getDATEEnumLiteralDeclaration_19()); }
		('date')
		{ after(grammarAccess.getBasicTypeAccess().getDATEEnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLREALEnumLiteralDeclaration_20()); }
		('lreal')
		{ after(grammarAccess.getBasicTypeAccess().getLREALEnumLiteralDeclaration_20()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getWCHAREnumLiteralDeclaration_21()); }
		('wchar')
		{ after(grammarAccess.getBasicTypeAccess().getWCHAREnumLiteralDeclaration_21()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__0__Impl
	rule__EisModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getProjectKeyword_0()); }
	'project'
	{ after(grammarAccess.getEisModelAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__1__Impl
	rule__EisModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEisModelAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__2__Impl
	rule__EisModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getProjectNameAssignment_2()); }
	(rule__EisModel__ProjectNameAssignment_2)
	{ after(grammarAccess.getEisModelAccess().getProjectNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__3__Impl
	rule__EisModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getEisModelAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__4__Impl
	rule__EisModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getPlcnameKeyword_4()); }
	'plcname'
	{ after(grammarAccess.getEisModelAccess().getPlcnameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__5__Impl
	rule__EisModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getEisModelAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__6__Impl
	rule__EisModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getPlcNameAssignment_6()); }
	(rule__EisModel__PlcNameAssignment_6)
	{ after(grammarAccess.getEisModelAccess().getPlcNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__7__Impl
	rule__EisModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getEisModelAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__8__Impl
	rule__EisModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getAuthorKeyword_8()); }
	'author'
	{ after(grammarAccess.getEisModelAccess().getAuthorKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__9__Impl
	rule__EisModel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getEqualsSignKeyword_9()); }
	'='
	{ after(grammarAccess.getEisModelAccess().getEqualsSignKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__10__Impl
	rule__EisModel__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getAuthorNameAssignment_10()); }
	(rule__EisModel__AuthorNameAssignment_10)
	{ after(grammarAccess.getEisModelAccess().getAuthorNameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__11__Impl
	rule__EisModel__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getSemicolonKeyword_11()); }
	';'
	{ after(grammarAccess.getEisModelAccess().getSemicolonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EisModel__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEisModelAccess().getTestcasesAssignment_12()); }
	(rule__EisModel__TestcasesAssignment_12)*
	{ after(grammarAccess.getEisModelAccess().getTestcasesAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Testcase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testcase__Group__0__Impl
	rule__Testcase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestcaseAccess().getTestcaseKeyword_0()); }
	'testcase'
	{ after(grammarAccess.getTestcaseAccess().getTestcaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testcase__Group__1__Impl
	rule__Testcase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestcaseAccess().getTestcaseNameAssignment_1()); }
	(rule__Testcase__TestcaseNameAssignment_1)
	{ after(grammarAccess.getTestcaseAccess().getTestcaseNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testcase__Group__2__Impl
	rule__Testcase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestcaseAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTestcaseAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testcase__Group__3__Impl
	rule__Testcase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestcaseAccess().getTestblockAssignment_3()); }
	(rule__Testcase__TestblockAssignment_3)?
	{ after(grammarAccess.getTestcaseAccess().getTestblockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testcase__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestcaseAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTestcaseAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Testblock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__0__Impl
	rule__Testblock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getTestActiveKeyword_0()); }
	'testActive'
	{ after(grammarAccess.getTestblockAccess().getTestActiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__1__Impl
	rule__Testblock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getTestblockAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__2__Impl
	rule__Testblock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getTestActiveAssignment_2()); }
	(rule__Testblock__TestActiveAssignment_2)
	{ after(grammarAccess.getTestblockAccess().getTestActiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__3__Impl
	rule__Testblock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getTestblockAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__4__Impl
	rule__Testblock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getBlockTypeKeyword_4()); }
	'blockType'
	{ after(grammarAccess.getTestblockAccess().getBlockTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__5__Impl
	rule__Testblock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getTestblockAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__6__Impl
	rule__Testblock__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getBlockTypeAssignment_6()); }
	(rule__Testblock__BlockTypeAssignment_6)
	{ after(grammarAccess.getTestblockAccess().getBlockTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__7__Impl
	rule__Testblock__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getTestblockAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__8__Impl
	rule__Testblock__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getDescriptionKeyword_8()); }
	'description'
	{ after(grammarAccess.getTestblockAccess().getDescriptionKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__9__Impl
	rule__Testblock__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getEqualsSignKeyword_9()); }
	'='
	{ after(grammarAccess.getTestblockAccess().getEqualsSignKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__10__Impl
	rule__Testblock__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getDescriptionAssignment_10()); }
	(rule__Testblock__DescriptionAssignment_10)
	{ after(grammarAccess.getTestblockAccess().getDescriptionAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__11__Impl
	rule__Testblock__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getSemicolonKeyword_11()); }
	';'
	{ after(grammarAccess.getTestblockAccess().getSemicolonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testblock__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestblockAccess().getDefineAssignment_12()); }
	(rule__Testblock__DefineAssignment_12)?
	{ after(grammarAccess.getTestblockAccess().getDefineAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefineBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__0__Impl
	rule__DefineBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getDefineKeyword_0()); }
	'define'
	{ after(grammarAccess.getDefineBlockAccess().getDefineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__1__Impl
	rule__DefineBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDefineBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__2__Impl
	rule__DefineBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getDirectionAssignment_2()); }
	(rule__DefineBlock__DirectionAssignment_2)
	{ after(grammarAccess.getDefineBlockAccess().getDirectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__3__Impl
	rule__DefineBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDefineBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineBlockAccess().getTeststepsAssignment_4()); }
	(rule__DefineBlock__TeststepsAssignment_4)*
	{ after(grammarAccess.getDefineBlockAccess().getTeststepsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getNameAssignment_0()); }
	(rule__Input__NameAssignment_0)
	{ after(grammarAccess.getInputAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getInputAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputVariablesAssignment_2()); }
	(rule__Input__InputVariablesAssignment_2)*
	{ after(grammarAccess.getInputAccess().getInputVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getInputAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getNameAssignment_0()); }
	(rule__Output__NameAssignment_0)
	{ after(grammarAccess.getOutputAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getOutputAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputVariablesAssignment_2()); }
	(rule__Output__OutputVariablesAssignment_2)*
	{ after(grammarAccess.getOutputAccess().getOutputVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getOutputAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InOut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InOut__Group__0__Impl
	rule__InOut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInOutAccess().getNameAssignment_0()); }
	(rule__InOut__NameAssignment_0)
	{ after(grammarAccess.getInOutAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InOut__Group__1__Impl
	rule__InOut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInOutAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getInOutAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InOut__Group__2__Impl
	rule__InOut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInOutAccess().getInoutVariablesAssignment_2()); }
	(rule__InOut__InoutVariablesAssignment_2)*
	{ after(grammarAccess.getInOutAccess().getInoutVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InOut__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInOutAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getInOutAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariantKeywordAssignment_1()); }
	(rule__Variable__VariantKeywordAssignment_1)?
	{ after(grammarAccess.getVariableAccess().getVariantKeywordAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableTypeAssignment_2()); }
	(rule__Variable__VariableTypeAssignment_2)?
	{ after(grammarAccess.getVariableAccess().getVariableTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_3()); }
	(rule__Variable__NameAssignment_3)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_4()); }
	(rule__Variable__Group_4__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_5()); }
	(rule__Variable__Alternatives_5)
	{ after(grammarAccess.getVariableAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__0__Impl
	rule__Variable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_4_0()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__1__Impl
	rule__Variable__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getIdiomAssignment_4_1()); }
	(rule__Variable__IdiomAssignment_4_1)
	{ after(grammarAccess.getVariableAccess().getIdiomAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_4_2()); }
	(rule__Variable__Group_4_2__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4_2__0__Impl
	rule__Variable__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPlusSignSolidusHyphenMinusKeyword_4_2_0()); }
	'+/-'
	{ after(grammarAccess.getVariableAccess().getPlusSignSolidusHyphenMinusKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getRangeAssignment_4_2_1()); }
	(rule__Variable__RangeAssignment_4_2_1)
	{ after(grammarAccess.getVariableAccess().getRangeAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Udt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__0__Impl
	rule__Udt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtKeyword_0()); }
	'udt'
	{ after(grammarAccess.getUdtAccess().getUdtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__1__Impl
	rule__Udt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getNameAssignment_1()); }
	(rule__Udt__NameAssignment_1)
	{ after(grammarAccess.getUdtAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__2__Impl
	rule__Udt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getUdtAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__3__Impl
	rule__Udt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtTypeAssignment_3()); }
	(rule__Udt__UdtTypeAssignment_3)
	{ after(grammarAccess.getUdtAccess().getUdtTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__4__Impl
	rule__Udt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getUdtAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__5__Impl
	rule__Udt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getUdtAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__6__Impl
	rule__Udt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getUdtVariablesAssignment_6()); }
	(rule__Udt__UdtVariablesAssignment_6)*
	{ after(grammarAccess.getUdtAccess().getUdtVariablesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Udt__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getUdtAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UdtRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UdtRef__Group__0__Impl
	rule__UdtRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtRefAccess().getUdtTypeAssignment_0()); }
	(rule__UdtRef__UdtTypeAssignment_0)
	{ after(grammarAccess.getUdtRefAccess().getUdtTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UdtRef__Group__1__Impl
	rule__UdtRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtRefAccess().getNameAssignment_1()); }
	(rule__UdtRef__NameAssignment_1)
	{ after(grammarAccess.getUdtRefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UdtRef__Group__2__Impl
	rule__UdtRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtRefAccess().getUdtVariablesAssignment_2()); }
	(rule__UdtRef__UdtVariablesAssignment_2)*
	{ after(grammarAccess.getUdtRefAccess().getUdtVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UdtRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUdtRefAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getUdtRefAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TeststepBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__0__Impl
	rule__TeststepBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getTeststepKeywordAssignment_0()); }
	(rule__TeststepBlock__TeststepKeywordAssignment_0)
	{ after(grammarAccess.getTeststepBlockAccess().getTeststepKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__1__Impl
	rule__TeststepBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTeststepBlockAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__2__Impl
	rule__TeststepBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getPlcCycleAssignment_2()); }
	(rule__TeststepBlock__PlcCycleAssignment_2)
	{ after(grammarAccess.getTeststepBlockAccess().getPlcCycleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__3__Impl
	rule__TeststepBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getTeststepBlockAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__4__Impl
	rule__TeststepBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getDescriptionAssignment_4()); }
	(rule__TeststepBlock__DescriptionAssignment_4)
	{ after(grammarAccess.getTeststepBlockAccess().getDescriptionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__5__Impl
	rule__TeststepBlock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTeststepBlockAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__6__Impl
	rule__TeststepBlock__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getTeststepBlockAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__7__Impl
	rule__TeststepBlock__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getAssertionAssignment_7()); }
	(rule__TeststepBlock__AssertionAssignment_7)
	{ after(grammarAccess.getTeststepBlockAccess().getAssertionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TeststepBlock__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeststepBlockAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getTeststepBlockAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__0__Impl
	rule__Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getNameAssignment_0()); }
	(rule__Set__NameAssignment_0)
	{ after(grammarAccess.getSetAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__1__Impl
	rule__Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getSetAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__2__Impl
	rule__Set__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getSetVariablesAssignment_2()); }
	(rule__Set__SetVariablesAssignment_2)*
	{ after(grammarAccess.getSetAccess().getSetVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getSetAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__0__Impl
	rule__Assert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getNameAssignment_0()); }
	(rule__Assert__NameAssignment_0)
	{ after(grammarAccess.getAssertAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__1__Impl
	rule__Assert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getAssertAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__2__Impl
	rule__Assert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getAssertVariablesAssignment_2()); }
	(rule__Assert__AssertVariablesAssignment_2)*
	{ after(grammarAccess.getAssertAccess().getAssertVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assert__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getAssertAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getVariableAssignment_0()); }
	(rule__Statement__VariableAssignment_0)
	{ after(grammarAccess.getStatementAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getCascadeAssignment_1()); }
	(rule__Statement__CascadeAssignment_1)*
	{ after(grammarAccess.getStatementAccess().getCascadeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__2__Impl
	rule__Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroup_2()); }
	(rule__Statement__Group_2__0)?
	{ after(grammarAccess.getStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__0__Impl
	rule__Statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getStatementAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__1__Impl
	rule__Statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getIdiomAssignment_2_1()); }
	(rule__Statement__IdiomAssignment_2_1)
	{ after(grammarAccess.getStatementAccess().getIdiomAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroup_2_2()); }
	(rule__Statement__Group_2_2__0)?
	{ after(grammarAccess.getStatementAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2_2__0__Impl
	rule__Statement__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getPlusSignSolidusHyphenMinusKeyword_2_2_0()); }
	'+/-'
	{ after(grammarAccess.getStatementAccess().getPlusSignSolidusHyphenMinusKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRangeAssignment_2_2_1()); }
	(rule__Statement__RangeAssignment_2_2_1)
	{ after(grammarAccess.getStatementAccess().getRangeAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cascade__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cascade__Group__0__Impl
	rule__Cascade__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cascade__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCascadeAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getCascadeAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cascade__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cascade__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cascade__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCascadeAccess().getUdtVarAssignment_1()); }
	(rule__Cascade__UdtVarAssignment_1)
	{ after(grammarAccess.getCascadeAccess().getUdtVarAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
	rule__MulOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
	(rule__MulOrDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
	(rule__MulOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIdiomParserRuleCall_0_1()); }
	ruleIdiom
	{ after(grammarAccess.getPrimaryAccess().getIdiomParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIdiomAssignment_1_2()); }
	(rule__Primary__IdiomAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getIdiomAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableRefAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVariableRefAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableAssignment_3_1()); }
	(rule__Atomic__VariableAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getVariableAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getRealConstantAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getRealConstantAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
	(rule__Atomic__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getByteConstantAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getByteConstantAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
	(rule__Atomic__ValueAssignment_5_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_6__0__Impl
	rule__Atomic__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getWordConstantAction_6_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getWordConstantAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_6_1()); }
	(rule__Atomic__ValueAssignment_6_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_7__0__Impl
	rule__Atomic__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDWordConstantAction_7_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDWordConstantAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_7_1()); }
	(rule__Atomic__ValueAssignment_7_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_8__0__Impl
	rule__Atomic__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLWordConstantAction_8_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getLWordConstantAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_8_1()); }
	(rule__Atomic__ValueAssignment_8_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_9__0__Impl
	rule__Atomic__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getCharConstantAction_9_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getCharConstantAction_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_9_1()); }
	(rule__Atomic__ValueAssignment_9_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_10__0__Impl
	rule__Atomic__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getTimeConstantAction_10_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getTimeConstantAction_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_10_1()); }
	(rule__Atomic__ValueAssignment_10_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_11__0__Impl
	rule__Atomic__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLTimeConstantAction_11_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getLTimeConstantAction_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_11_1()); }
	(rule__Atomic__ValueAssignment_11_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_12__0__Impl
	rule__Atomic__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDateConstantAction_12_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDateConstantAction_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_12_1()); }
	(rule__Atomic__ValueAssignment_12_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectionBlock__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getDirectionBlockAccess().getUnorderedGroup());
	}
:
	rule__DirectionBlock__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getDirectionBlockAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getDirectionBlockAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDirectionBlockAccess().getInputAssignment_0()); }
					(rule__DirectionBlock__InputAssignment_0)
					{ after(grammarAccess.getDirectionBlockAccess().getInputAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDirectionBlockAccess().getOutputAssignment_1()); }
					(rule__DirectionBlock__OutputAssignment_1)
					{ after(grammarAccess.getDirectionBlockAccess().getOutputAssignment_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDirectionBlockAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDirectionBlockAccess().getInoutAssignment_2()); }
					(rule__DirectionBlock__InoutAssignment_2)
					{ after(grammarAccess.getDirectionBlockAccess().getInoutAssignment_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDirectionBlockAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionBlock__UnorderedGroup__Impl
	rule__DirectionBlock__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionBlock__UnorderedGroup__Impl
	rule__DirectionBlock__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionBlock__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionBlock__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getAssertionBlockAccess().getUnorderedGroup());
	}
:
	rule__AssertionBlock__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getAssertionBlockAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getAssertionBlockAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__AssertionBlock__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getAssertionBlockAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getAssertionBlockAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getAssertionBlockAccess().getSetAssignment_0()); }
					(rule__AssertionBlock__SetAssignment_0)
					{ after(grammarAccess.getAssertionBlockAccess().getSetAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getAssertionBlockAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getAssertionBlockAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getAssertionBlockAccess().getAssertAssignment_1()); }
					(rule__AssertionBlock__AssertAssignment_1)
					{ after(grammarAccess.getAssertionBlockAccess().getAssertAssignment_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAssertionBlockAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__AssertionBlock__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionBlock__UnorderedGroup__Impl
	rule__AssertionBlock__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionBlock__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionBlock__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EisModel__ProjectNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEisModelAccess().getProjectNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEisModelAccess().getProjectNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__PlcNameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEisModelAccess().getPlcNameSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getEisModelAccess().getPlcNameSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__AuthorNameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEisModelAccess().getAuthorNameSTRINGTerminalRuleCall_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getEisModelAccess().getAuthorNameSTRINGTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EisModel__TestcasesAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEisModelAccess().getTestcasesTestcaseParserRuleCall_12_0()); }
		ruleTestcase
		{ after(grammarAccess.getEisModelAccess().getTestcasesTestcaseParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__TestcaseNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestcaseAccess().getTestcaseNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTestcaseAccess().getTestcaseNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testcase__TestblockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestcaseAccess().getTestblockTestblockParserRuleCall_3_0()); }
		ruleTestblock
		{ after(grammarAccess.getTestcaseAccess().getTestblockTestblockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__TestActiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestblockAccess().getTestActiveBoolConstantParserRuleCall_2_0()); }
		ruleBoolConstant
		{ after(grammarAccess.getTestblockAccess().getTestActiveBoolConstantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__BlockTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestblockAccess().getBlockTypeBlockConstantParserRuleCall_6_0()); }
		ruleBlockConstant
		{ after(grammarAccess.getTestblockAccess().getBlockTypeBlockConstantParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__DescriptionAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestblockAccess().getDescriptionSTRINGTerminalRuleCall_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getTestblockAccess().getDescriptionSTRINGTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testblock__DefineAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestblockAccess().getDefineDefineBlockParserRuleCall_12_0()); }
		ruleDefineBlock
		{ after(grammarAccess.getTestblockAccess().getDefineDefineBlockParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolConstant__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolConstantAccess().getValueAlternatives_0()); }
		(rule__BoolConstant__ValueAlternatives_0)
		{ after(grammarAccess.getBoolConstantAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockConstant__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockConstantAccess().getValueAlternatives_0()); }
		(rule__BlockConstant__ValueAlternatives_0)
		{ after(grammarAccess.getBlockConstantAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__DirectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineBlockAccess().getDirectionDirectionBlockParserRuleCall_2_0()); }
		ruleDirectionBlock
		{ after(grammarAccess.getDefineBlockAccess().getDirectionDirectionBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineBlock__TeststepsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineBlockAccess().getTeststepsTeststepBlockParserRuleCall_4_0()); }
		ruleTeststepBlock
		{ after(grammarAccess.getDefineBlockAccess().getTeststepsTeststepBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__InputAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getInputInputParserRuleCall_0_0()); }
		ruleInput
		{ after(grammarAccess.getDirectionBlockAccess().getInputInputParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__OutputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getOutputOutputParserRuleCall_1_0()); }
		ruleOutput
		{ after(grammarAccess.getDirectionBlockAccess().getOutputOutputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionBlock__InoutAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionBlockAccess().getInoutInOutParserRuleCall_2_0()); }
		ruleInOut
		{ after(grammarAccess.getDirectionBlockAccess().getInoutInOutParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameInputKeyword_0_0()); }
		(
			{ before(grammarAccess.getInputAccess().getNameInputKeyword_0_0()); }
			'input'
			{ after(grammarAccess.getInputAccess().getNameInputKeyword_0_0()); }
		)
		{ after(grammarAccess.getInputAccess().getNameInputKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__InputVariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getInputVariablesVariablesParserRuleCall_2_0()); }
		ruleVariables
		{ after(grammarAccess.getInputAccess().getInputVariablesVariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getNameOutputKeyword_0_0()); }
		(
			{ before(grammarAccess.getOutputAccess().getNameOutputKeyword_0_0()); }
			'output'
			{ after(grammarAccess.getOutputAccess().getNameOutputKeyword_0_0()); }
		)
		{ after(grammarAccess.getOutputAccess().getNameOutputKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OutputVariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getOutputVariablesVariablesParserRuleCall_2_0()); }
		ruleVariables
		{ after(grammarAccess.getOutputAccess().getOutputVariablesVariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInOutAccess().getNameInoutKeyword_0_0()); }
		(
			{ before(grammarAccess.getInOutAccess().getNameInoutKeyword_0_0()); }
			'inout'
			{ after(grammarAccess.getInOutAccess().getNameInoutKeyword_0_0()); }
		)
		{ after(grammarAccess.getInOutAccess().getNameInoutKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__InoutVariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInOutAccess().getInoutVariablesVariablesParserRuleCall_2_0()); }
		ruleVariables
		{ after(grammarAccess.getInOutAccess().getInoutVariablesVariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariantKeywordAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariantKeywordVariantKeyword_1_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getVariantKeywordVariantKeyword_1_0()); }
			'variant'
			{ after(grammarAccess.getVariableAccess().getVariantKeywordVariantKeyword_1_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getVariantKeywordVariantKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariableTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariableTypeBasicTypeEnumRuleCall_2_0()); }
		ruleBasicType
		{ after(grammarAccess.getVariableAccess().getVariableTypeBasicTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IdiomAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIdiomIdiomParserRuleCall_4_1_0()); }
		ruleIdiom
		{ after(grammarAccess.getVariableAccess().getIdiomIdiomParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__RangeAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getRangeIdiomParserRuleCall_4_2_1_0()); }
		ruleIdiom
		{ after(grammarAccess.getVariableAccess().getRangeIdiomParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NextVariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNextVariableCommaKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getNextVariableCommaKeyword_5_1_0()); }
			','
			{ after(grammarAccess.getVariableAccess().getNextVariableCommaKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getNextVariableCommaKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUdtAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__UdtTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtAccess().getUdtTypeUdtTypeParserRuleCall_3_0()); }
		ruleUdtType
		{ after(grammarAccess.getUdtAccess().getUdtTypeUdtTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Udt__UdtVariablesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtAccess().getUdtVariablesVariablesParserRuleCall_6_0()); }
		ruleVariables
		{ after(grammarAccess.getUdtAccess().getUdtVariablesVariablesParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__UdtTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtRefAccess().getUdtTypeUdtTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getUdtRefAccess().getUdtTypeUdtTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUdtRefAccess().getUdtTypeUdtTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getUdtRefAccess().getUdtTypeUdtTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtRefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUdtRefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtRef__UdtVariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtRefAccess().getUdtVariablesVariablesParserRuleCall_2_0()); }
		ruleVariables
		{ after(grammarAccess.getUdtRefAccess().getUdtVariablesVariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UdtType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUdtTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getUdtTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__TeststepKeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeststepBlockAccess().getTeststepKeywordTeststepKeyword_0_0()); }
		(
			{ before(grammarAccess.getTeststepBlockAccess().getTeststepKeywordTeststepKeyword_0_0()); }
			'teststep'
			{ after(grammarAccess.getTeststepBlockAccess().getTeststepKeywordTeststepKeyword_0_0()); }
		)
		{ after(grammarAccess.getTeststepBlockAccess().getTeststepKeywordTeststepKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__PlcCycleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeststepBlockAccess().getPlcCycleLONGTerminalRuleCall_2_0()); }
		RULE_LONG
		{ after(grammarAccess.getTeststepBlockAccess().getPlcCycleLONGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__DescriptionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeststepBlockAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getTeststepBlockAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TeststepBlock__AssertionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeststepBlockAccess().getAssertionAssertionBlockParserRuleCall_7_0()); }
		ruleAssertionBlock
		{ after(grammarAccess.getTeststepBlockAccess().getAssertionAssertionBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionBlock__SetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionBlockAccess().getSetSetParserRuleCall_0_0()); }
		ruleSet
		{ after(grammarAccess.getAssertionBlockAccess().getSetSetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionBlock__AssertAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionBlockAccess().getAssertAssertParserRuleCall_1_0()); }
		ruleAssert
		{ after(grammarAccess.getAssertionBlockAccess().getAssertAssertParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getNameSetKeyword_0_0()); }
		(
			{ before(grammarAccess.getSetAccess().getNameSetKeyword_0_0()); }
			'set'
			{ after(grammarAccess.getSetAccess().getNameSetKeyword_0_0()); }
		)
		{ after(grammarAccess.getSetAccess().getNameSetKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__SetVariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getSetVariablesStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getSetAccess().getSetVariablesStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getNameAssertKeyword_0_0()); }
		(
			{ before(grammarAccess.getAssertAccess().getNameAssertKeyword_0_0()); }
			'assert'
			{ after(grammarAccess.getAssertAccess().getNameAssertKeyword_0_0()); }
		)
		{ after(grammarAccess.getAssertAccess().getNameAssertKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assert__AssertVariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertAccess().getAssertVariablesStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getAssertAccess().getAssertVariablesStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVariableVariablesCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getVariableVariablesIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatementAccess().getVariableVariablesIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStatementAccess().getVariableVariablesCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CascadeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCascadeCascadeParserRuleCall_1_0()); }
		ruleCascade
		{ after(grammarAccess.getStatementAccess().getCascadeCascadeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IdiomAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIdiomIdiomParserRuleCall_2_1_0()); }
		ruleIdiom
		{ after(grammarAccess.getStatementAccess().getIdiomIdiomParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RangeAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRangeIdiomParserRuleCall_2_2_1_0()); }
		ruleIdiom
		{ after(grammarAccess.getStatementAccess().getRangeIdiomParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cascade__UdtVarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCascadeAccess().getUdtVarVariablesCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCascadeAccess().getUdtVarVariablesIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCascadeAccess().getUdtVarVariablesIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCascadeAccess().getUdtVarVariablesCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
		(rule__Equality__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__IdiomAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getIdiomPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getIdiomPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_0_1_0()); }
		(rule__Atomic__ValueAlternatives_0_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VariableAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getVariableVariableCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getVariableVariableIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getVariableVariableIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getVariableVariableCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_4_1_0()); }
		RULE_REAL
		{ after(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBYTETerminalRuleCall_5_1_0()); }
		RULE_BYTE
		{ after(grammarAccess.getAtomicAccess().getValueBYTETerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueWORDTerminalRuleCall_6_1_0()); }
		RULE_WORD
		{ after(grammarAccess.getAtomicAccess().getValueWORDTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDWORDTerminalRuleCall_7_1_0()); }
		RULE_DWORD
		{ after(grammarAccess.getAtomicAccess().getValueDWORDTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueLWORDTerminalRuleCall_8_1_0()); }
		RULE_LWORD
		{ after(grammarAccess.getAtomicAccess().getValueLWORDTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueCHARTerminalRuleCall_9_1_0()); }
		RULE_CHAR
		{ after(grammarAccess.getAtomicAccess().getValueCHARTerminalRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTIMETerminalRuleCall_10_1_0()); }
		RULE_TIME
		{ after(grammarAccess.getAtomicAccess().getValueTIMETerminalRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueLTIMETerminalRuleCall_11_1_0()); }
		RULE_LTIME
		{ after(grammarAccess.getAtomicAccess().getValueLTIMETerminalRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDATETerminalRuleCall_12_1_0()); }
		RULE_DATE
		{ after(grammarAccess.getAtomicAccess().getValueDATETerminalRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_X : '0'..'9';

fragment RULE_HEX : (RULE_X|'A'..'F'|'a'..'f');

RULE_LONG : RULE_X+;

RULE_NEGATIVE_LONG : '-' RULE_LONG;

RULE_REAL : (RULE_LONG|RULE_NEGATIVE_LONG) '.' RULE_LONG (('e'|'E') ('-'|'+')? (RULE_X? RULE_X)? RULE_X)?;

RULE_BYTE : '16#' RULE_HEX RULE_HEX;

RULE_WORD : '16#' RULE_HEX RULE_HEX RULE_HEX RULE_HEX;

RULE_DWORD : '16#' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '_' RULE_HEX RULE_HEX RULE_HEX RULE_HEX;

RULE_LWORD : '16#' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '_' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '_' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '_' RULE_HEX RULE_HEX RULE_HEX RULE_HEX;

RULE_DATE : 'D#' RULE_X RULE_X RULE_X RULE_X '-' RULE_X RULE_X '-' RULE_X RULE_X;

RULE_CHAR : '\'' ('a'..'z'|'A'..'Z'|RULE_X) '\'';

RULE_TIME : 'T#' '-'? (RULE_X? RULE_X 'd' '_'?)? (RULE_X? RULE_X 'h' '_'?)? (RULE_X? RULE_X 'M' '_'?)? (RULE_X? RULE_X 's' '_'?)? ((RULE_X? RULE_X)? RULE_X 'ms')?;

RULE_LTIME : 'LT#' '-'? (((((RULE_X? RULE_X)? RULE_X)? RULE_X)? RULE_X)? RULE_X 'd' '_'?)? (RULE_X? RULE_X 'h' '_'?)? (RULE_X? RULE_X 'M' '_'?)? (RULE_X? RULE_X 's' '_'?)? ((RULE_X? RULE_X)? RULE_X 'ms' '_'?)? ((RULE_X? RULE_X)? RULE_X 'us' '_'?)? ((RULE_X? RULE_X)? RULE_X 'ns')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
