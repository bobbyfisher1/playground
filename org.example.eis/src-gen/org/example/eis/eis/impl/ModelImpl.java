/**
 * generated by Xtext 2.13.0
 */
package org.example.eis.eis.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.example.eis.eis.EisPackage;
import org.example.eis.eis.Model;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.eis.eis.impl.ModelImpl#getProject_name <em>Project name</em>}</li>
 *   <li>{@link org.example.eis.eis.impl.ModelImpl#getPlc_name <em>Plc name</em>}</li>
 *   <li>{@link org.example.eis.eis.impl.ModelImpl#getEis <em>Eis</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The default value of the '{@link #getProject_name() <em>Project name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProject_name()
   * @generated
   * @ordered
   */
  protected static final String PROJECT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProject_name() <em>Project name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProject_name()
   * @generated
   * @ordered
   */
  protected String project_name = PROJECT_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPlc_name() <em>Plc name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlc_name()
   * @generated
   * @ordered
   */
  protected static final String PLC_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPlc_name() <em>Plc name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlc_name()
   * @generated
   * @ordered
   */
  protected String plc_name = PLC_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEis() <em>Eis</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEis()
   * @generated
   * @ordered
   */
  protected EList<String> eis;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EisPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getProject_name()
  {
    return project_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProject_name(String newProject_name)
  {
    String oldProject_name = project_name;
    project_name = newProject_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EisPackage.MODEL__PROJECT_NAME, oldProject_name, project_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPlc_name()
  {
    return plc_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPlc_name(String newPlc_name)
  {
    String oldPlc_name = plc_name;
    plc_name = newPlc_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EisPackage.MODEL__PLC_NAME, oldPlc_name, plc_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getEis()
  {
    if (eis == null)
    {
      eis = new EDataTypeEList<String>(String.class, this, EisPackage.MODEL__EIS);
    }
    return eis;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EisPackage.MODEL__PROJECT_NAME:
        return getProject_name();
      case EisPackage.MODEL__PLC_NAME:
        return getPlc_name();
      case EisPackage.MODEL__EIS:
        return getEis();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EisPackage.MODEL__PROJECT_NAME:
        setProject_name((String)newValue);
        return;
      case EisPackage.MODEL__PLC_NAME:
        setPlc_name((String)newValue);
        return;
      case EisPackage.MODEL__EIS:
        getEis().clear();
        getEis().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EisPackage.MODEL__PROJECT_NAME:
        setProject_name(PROJECT_NAME_EDEFAULT);
        return;
      case EisPackage.MODEL__PLC_NAME:
        setPlc_name(PLC_NAME_EDEFAULT);
        return;
      case EisPackage.MODEL__EIS:
        getEis().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EisPackage.MODEL__PROJECT_NAME:
        return PROJECT_NAME_EDEFAULT == null ? project_name != null : !PROJECT_NAME_EDEFAULT.equals(project_name);
      case EisPackage.MODEL__PLC_NAME:
        return PLC_NAME_EDEFAULT == null ? plc_name != null : !PLC_NAME_EDEFAULT.equals(plc_name);
      case EisPackage.MODEL__EIS:
        return eis != null && !eis.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (project_name: ");
    result.append(project_name);
    result.append(", plc_name: ");
    result.append(plc_name);
    result.append(", eis: ");
    result.append(eis);
    result.append(')');
    return result.toString();
  }

} //ModelImpl
