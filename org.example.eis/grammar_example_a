testcase Name{
	//IDs can be counted automatically
	testActive = false; 	//boolean
	blockType = FC;			//enum{FC, FB}			what else is possible here?
	description = "";		//string	

	teststep(int plcCycle, string description){
		input  { datatype name = value }
		output { overload? datatype name = value (range +/- [])? }
		inout  { datatype name = value }
	}
}


//example---------------------------------------------
...
	
	teststep(plcCycle, "89*89"){
		input{
			int Zahl1 = 89;
			int Zahl2 = 89;
		}	
		output{	return int Ret_Val = 7921; }
	}
	
	
	teststep(plcCycle, "3*3 falsch"){
		input{ int Zahl1 = 3, Zahl2 = 3; }
		output{ return int Ret_Val = 10; }
	}
	
	
//example2---------------------------------------------------------------------------------------
...
	teststep template(0, "Template"){
		input{ 
		
			udt Steuerwort(typeSteuerwort){
				bool Start, Stop, Modus; 							
				
				udt Manuell(typeManuellSteuerwort){
					bool Links, Rechts;
				}
			
				udt Auto(typeAutoSteuerwort){
					dint SollPos;									
					bool Execute;
				}
			}
		}	
	}