/**
 * generated by Xtext 2.14.0
 */
package org.xtext.eis.eis.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.eis.eis.EisPackage;
import org.xtext.eis.eis.Testblock;
import org.xtext.eis.eis.Testcase;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Testcase</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.eis.eis.impl.TestcaseImpl#getTestcaseName <em>Testcase Name</em>}</li>
 *   <li>{@link org.xtext.eis.eis.impl.TestcaseImpl#getTestblock <em>Testblock</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TestcaseImpl extends MinimalEObjectImpl.Container implements Testcase
{
  /**
   * The default value of the '{@link #getTestcaseName() <em>Testcase Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTestcaseName()
   * @generated
   * @ordered
   */
  protected static final String TESTCASE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTestcaseName() <em>Testcase Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTestcaseName()
   * @generated
   * @ordered
   */
  protected String testcaseName = TESTCASE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTestblock() <em>Testblock</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTestblock()
   * @generated
   * @ordered
   */
  protected Testblock testblock;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TestcaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EisPackage.Literals.TESTCASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTestcaseName()
  {
    return testcaseName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTestcaseName(String newTestcaseName)
  {
    String oldTestcaseName = testcaseName;
    testcaseName = newTestcaseName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EisPackage.TESTCASE__TESTCASE_NAME, oldTestcaseName, testcaseName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Testblock getTestblock()
  {
    return testblock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTestblock(Testblock newTestblock, NotificationChain msgs)
  {
    Testblock oldTestblock = testblock;
    testblock = newTestblock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EisPackage.TESTCASE__TESTBLOCK, oldTestblock, newTestblock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTestblock(Testblock newTestblock)
  {
    if (newTestblock != testblock)
    {
      NotificationChain msgs = null;
      if (testblock != null)
        msgs = ((InternalEObject)testblock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EisPackage.TESTCASE__TESTBLOCK, null, msgs);
      if (newTestblock != null)
        msgs = ((InternalEObject)newTestblock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EisPackage.TESTCASE__TESTBLOCK, null, msgs);
      msgs = basicSetTestblock(newTestblock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EisPackage.TESTCASE__TESTBLOCK, newTestblock, newTestblock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EisPackage.TESTCASE__TESTBLOCK:
        return basicSetTestblock(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EisPackage.TESTCASE__TESTCASE_NAME:
        return getTestcaseName();
      case EisPackage.TESTCASE__TESTBLOCK:
        return getTestblock();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EisPackage.TESTCASE__TESTCASE_NAME:
        setTestcaseName((String)newValue);
        return;
      case EisPackage.TESTCASE__TESTBLOCK:
        setTestblock((Testblock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EisPackage.TESTCASE__TESTCASE_NAME:
        setTestcaseName(TESTCASE_NAME_EDEFAULT);
        return;
      case EisPackage.TESTCASE__TESTBLOCK:
        setTestblock((Testblock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EisPackage.TESTCASE__TESTCASE_NAME:
        return TESTCASE_NAME_EDEFAULT == null ? testcaseName != null : !TESTCASE_NAME_EDEFAULT.equals(testcaseName);
      case EisPackage.TESTCASE__TESTBLOCK:
        return testblock != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (testcaseName: ");
    result.append(testcaseName);
    result.append(')');
    return result.toString();
  }

} //TestcaseImpl
