/*
 * generated by Xtext 2.12.0
 */
package org.example.eis.ui.outline

import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode
import org.eclipse.xtext.ui.editor.outline.impl.EObjectNode
import org.example.eis.eis.AssertionBlock
import org.example.eis.eis.EisModel
import org.example.eis.eis.Testcase
import org.example.eis.eis.TeststepBlock
import org.example.eis.eis.Variable
import org.example.eis.eis.Variables

/**
 * Customization of the default outline structure.
 * 
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#outline
 */
class EisOutlineTreeProvider extends DefaultOutlineTreeProvider {
	def _isLeaf(Variables v) {
		if (v instanceof Variable)
			true
		else
			false
	}

	def _isLeaf(TeststepBlock t) { true }

	def _isLeaf(AssertionBlock a) { true }

	def _createChildren(DocumentRootNode outlineNode, EisModel eisModel) {
		val testcases = eisModel.testcases

		for (e : testcases)
			createNode(outlineNode, e)
	}

	def _createChildren(EObjectNode testcaseNode, Testcase testcase) {
		val direction = testcase?.testblock?.define?.direction
		val teststeps = testcase?.testblock?.define?.teststeps

		testcaseNode.createChildren(direction)

		for (e : teststeps)
			testcaseNode.createChildren(e)
	}

//	def _createChildren(EObjectNode setNode, Set set) {
//		for (e : set.setVariables)
//			setNode.createChildren(e)
//	}
//
//	def _createChildren(EObjectNode assertNode, Assert assert) {
//		for (e : assert.assertVariables)
//			assertNode.createChildren(e)
//	}
//
//	def _createChildren(EObjectNode udtNode, Udt udt) {
//		for (e : udt.udtVariables)
//			udtNode.createChildren(e)
//	}
}
