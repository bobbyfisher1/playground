grammar org.example.define.Define with org.eclipse.xtext.common.Terminals

generate define "http://www.example.org/define/Define"

DefineBlock:
	'define' '{' direction=DirectionBlock '}';

DirectionBlock:
	input=Input & inout=Inout? & output=Output;

Input:
	'input' {Input} '[' inputVariables+=Variable* ']';

Output:
	'output' {Output} '[' outputVariables+=Variable* ']';

Inout:
	'inout' {Inout} '[' inoutVariables+=Variable* ']';

Variable:
	({Variable} variantKeyword?='variant'? variableType=BasicType? /*udtType=[UdtType]?*/ variableName=ID
	('=' expression=Expression ('+/-' range=Expression)?)? (';' | nextVariable?=','))
	//
	| (udt=Udt);

Udt:
	'udt' udtName=ID '(' udtTypes=UdtType ')' '{' udtVariables+=Variable* '}';

	//Types:
//	basicType=BasicType ;//| udtType=[UdtType]; // look up top
//
enum BasicType:
	NULL='null' | INT='int' | BOOL='bool' | FLOAT='float' | STRINGTYP='string';

UdtType:
	udtTypeName=ID;

Expression:
	Or;

Or returns Expression:
	And ({Or.left=current} "||" right=And)*;

And returns Expression:
	Equality ({And.left=current} "&&" right=Equality)*;

Equality returns Expression:
	Comparison ({Equality.left=current} op=("==" | "!=") right=Comparison)*;

Comparison returns Expression:
	PlusOrMinus ({Comparison.left=current} op=(">=" | "<=" | ">" | "<") right=PlusOrMinus)*;

PlusOrMinus returns Expression:
	MulOrDiv (({Plus.left=current} '+' | {Minus.left=current} '-') right=MulOrDiv)*;

MulOrDiv returns Expression:
	Primary ({MulOrDiv.left=current} op=('*' | '/') right=Primary)*;

Primary returns Expression:
	'(' Expression ')' | {Not} "!" expression=Primary | Atomic;

Atomic returns Expression:
	{IntConstant} value=INT | {StringConstant} value=STRING | {BoolConstant} value=('true' | 'false') | {VariableRef}
	variable=[Variable] | FloatConstant;

FloatConstant returns EFloat:
	{EFloat} value=INT '.' valueOfDecimal=INT;
	/*	<listed_datatypes_in_S7UintTest_Editor>
					Bool
					Byte
					Word
					DWord
					LWord
					SInt
					Int
					DInt
					LInt
					USInt
					UInt
					UDInt
					ULInt
					Real
					LReal
					Char
					WChar
					String
					WString
					S5Time
					Time
					LTime
					Date
					Tod
					LTod
					DT
					LDT
					DTL
UDT */