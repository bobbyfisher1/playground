/**
 * generated by Xtext 2.13.0
 */
package org.example.define.define.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.example.define.define.DefinePackage;
import org.example.define.define.UdtType;
import org.example.define.define.VariableType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variable Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.define.define.impl.VariableTypeImpl#getBasicTypes <em>Basic Types</em>}</li>
 *   <li>{@link org.example.define.define.impl.VariableTypeImpl#getSpecifiedUdtType <em>Specified Udt Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariableTypeImpl extends MinimalEObjectImpl.Container implements VariableType
{
  /**
   * The default value of the '{@link #getBasicTypes() <em>Basic Types</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasicTypes()
   * @generated
   * @ordered
   */
  protected static final String BASIC_TYPES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBasicTypes() <em>Basic Types</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasicTypes()
   * @generated
   * @ordered
   */
  protected String basicTypes = BASIC_TYPES_EDEFAULT;

  /**
   * The cached value of the '{@link #getSpecifiedUdtType() <em>Specified Udt Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecifiedUdtType()
   * @generated
   * @ordered
   */
  protected UdtType specifiedUdtType;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariableTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DefinePackage.Literals.VARIABLE_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBasicTypes()
  {
    return basicTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBasicTypes(String newBasicTypes)
  {
    String oldBasicTypes = basicTypes;
    basicTypes = newBasicTypes;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE_TYPE__BASIC_TYPES, oldBasicTypes, basicTypes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UdtType getSpecifiedUdtType()
  {
    if (specifiedUdtType != null && specifiedUdtType.eIsProxy())
    {
      InternalEObject oldSpecifiedUdtType = (InternalEObject)specifiedUdtType;
      specifiedUdtType = (UdtType)eResolveProxy(oldSpecifiedUdtType);
      if (specifiedUdtType != oldSpecifiedUdtType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DefinePackage.VARIABLE_TYPE__SPECIFIED_UDT_TYPE, oldSpecifiedUdtType, specifiedUdtType));
      }
    }
    return specifiedUdtType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UdtType basicGetSpecifiedUdtType()
  {
    return specifiedUdtType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpecifiedUdtType(UdtType newSpecifiedUdtType)
  {
    UdtType oldSpecifiedUdtType = specifiedUdtType;
    specifiedUdtType = newSpecifiedUdtType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE_TYPE__SPECIFIED_UDT_TYPE, oldSpecifiedUdtType, specifiedUdtType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE_TYPE__BASIC_TYPES:
        return getBasicTypes();
      case DefinePackage.VARIABLE_TYPE__SPECIFIED_UDT_TYPE:
        if (resolve) return getSpecifiedUdtType();
        return basicGetSpecifiedUdtType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE_TYPE__BASIC_TYPES:
        setBasicTypes((String)newValue);
        return;
      case DefinePackage.VARIABLE_TYPE__SPECIFIED_UDT_TYPE:
        setSpecifiedUdtType((UdtType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE_TYPE__BASIC_TYPES:
        setBasicTypes(BASIC_TYPES_EDEFAULT);
        return;
      case DefinePackage.VARIABLE_TYPE__SPECIFIED_UDT_TYPE:
        setSpecifiedUdtType((UdtType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE_TYPE__BASIC_TYPES:
        return BASIC_TYPES_EDEFAULT == null ? basicTypes != null : !BASIC_TYPES_EDEFAULT.equals(basicTypes);
      case DefinePackage.VARIABLE_TYPE__SPECIFIED_UDT_TYPE:
        return specifiedUdtType != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (basicTypes: ");
    result.append(basicTypes);
    result.append(')');
    return result.toString();
  }

} //VariableTypeImpl
