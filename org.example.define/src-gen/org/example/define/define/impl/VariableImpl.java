/**
 * generated by Xtext 2.13.0
 */
package org.example.define.define.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.example.define.define.DefinePackage;
import org.example.define.define.Udt;
import org.example.define.define.Variable;
import org.example.define.define.VariableDefinition;
import org.example.define.define.Variant;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.define.define.impl.VariableImpl#getVariableType <em>Variable Type</em>}</li>
 *   <li>{@link org.example.define.define.impl.VariableImpl#getVariableDefinition <em>Variable Definition</em>}</li>
 *   <li>{@link org.example.define.define.impl.VariableImpl#getUdt <em>Udt</em>}</li>
 *   <li>{@link org.example.define.define.impl.VariableImpl#getVariant <em>Variant</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariableImpl extends MinimalEObjectImpl.Container implements Variable
{
  /**
   * The default value of the '{@link #getVariableType() <em>Variable Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableType()
   * @generated
   * @ordered
   */
  protected static final String VARIABLE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVariableType() <em>Variable Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableType()
   * @generated
   * @ordered
   */
  protected String variableType = VARIABLE_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariableDefinition() <em>Variable Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableDefinition()
   * @generated
   * @ordered
   */
  protected VariableDefinition variableDefinition;

  /**
   * The cached value of the '{@link #getUdt() <em>Udt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdt()
   * @generated
   * @ordered
   */
  protected Udt udt;

  /**
   * The cached value of the '{@link #getVariant() <em>Variant</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariant()
   * @generated
   * @ordered
   */
  protected Variant variant;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DefinePackage.Literals.VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVariableType()
  {
    return variableType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariableType(String newVariableType)
  {
    String oldVariableType = variableType;
    variableType = newVariableType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__VARIABLE_TYPE, oldVariableType, variableType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDefinition getVariableDefinition()
  {
    return variableDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariableDefinition(VariableDefinition newVariableDefinition, NotificationChain msgs)
  {
    VariableDefinition oldVariableDefinition = variableDefinition;
    variableDefinition = newVariableDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__VARIABLE_DEFINITION, oldVariableDefinition, newVariableDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariableDefinition(VariableDefinition newVariableDefinition)
  {
    if (newVariableDefinition != variableDefinition)
    {
      NotificationChain msgs = null;
      if (variableDefinition != null)
        msgs = ((InternalEObject)variableDefinition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DefinePackage.VARIABLE__VARIABLE_DEFINITION, null, msgs);
      if (newVariableDefinition != null)
        msgs = ((InternalEObject)newVariableDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DefinePackage.VARIABLE__VARIABLE_DEFINITION, null, msgs);
      msgs = basicSetVariableDefinition(newVariableDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__VARIABLE_DEFINITION, newVariableDefinition, newVariableDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Udt getUdt()
  {
    return udt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUdt(Udt newUdt, NotificationChain msgs)
  {
    Udt oldUdt = udt;
    udt = newUdt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__UDT, oldUdt, newUdt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUdt(Udt newUdt)
  {
    if (newUdt != udt)
    {
      NotificationChain msgs = null;
      if (udt != null)
        msgs = ((InternalEObject)udt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DefinePackage.VARIABLE__UDT, null, msgs);
      if (newUdt != null)
        msgs = ((InternalEObject)newUdt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DefinePackage.VARIABLE__UDT, null, msgs);
      msgs = basicSetUdt(newUdt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__UDT, newUdt, newUdt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variant getVariant()
  {
    return variant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariant(Variant newVariant, NotificationChain msgs)
  {
    Variant oldVariant = variant;
    variant = newVariant;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__VARIANT, oldVariant, newVariant);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariant(Variant newVariant)
  {
    if (newVariant != variant)
    {
      NotificationChain msgs = null;
      if (variant != null)
        msgs = ((InternalEObject)variant).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DefinePackage.VARIABLE__VARIANT, null, msgs);
      if (newVariant != null)
        msgs = ((InternalEObject)newVariant).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DefinePackage.VARIABLE__VARIANT, null, msgs);
      msgs = basicSetVariant(newVariant, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.VARIABLE__VARIANT, newVariant, newVariant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE__VARIABLE_DEFINITION:
        return basicSetVariableDefinition(null, msgs);
      case DefinePackage.VARIABLE__UDT:
        return basicSetUdt(null, msgs);
      case DefinePackage.VARIABLE__VARIANT:
        return basicSetVariant(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE__VARIABLE_TYPE:
        return getVariableType();
      case DefinePackage.VARIABLE__VARIABLE_DEFINITION:
        return getVariableDefinition();
      case DefinePackage.VARIABLE__UDT:
        return getUdt();
      case DefinePackage.VARIABLE__VARIANT:
        return getVariant();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE__VARIABLE_TYPE:
        setVariableType((String)newValue);
        return;
      case DefinePackage.VARIABLE__VARIABLE_DEFINITION:
        setVariableDefinition((VariableDefinition)newValue);
        return;
      case DefinePackage.VARIABLE__UDT:
        setUdt((Udt)newValue);
        return;
      case DefinePackage.VARIABLE__VARIANT:
        setVariant((Variant)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE__VARIABLE_TYPE:
        setVariableType(VARIABLE_TYPE_EDEFAULT);
        return;
      case DefinePackage.VARIABLE__VARIABLE_DEFINITION:
        setVariableDefinition((VariableDefinition)null);
        return;
      case DefinePackage.VARIABLE__UDT:
        setUdt((Udt)null);
        return;
      case DefinePackage.VARIABLE__VARIANT:
        setVariant((Variant)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.VARIABLE__VARIABLE_TYPE:
        return VARIABLE_TYPE_EDEFAULT == null ? variableType != null : !VARIABLE_TYPE_EDEFAULT.equals(variableType);
      case DefinePackage.VARIABLE__VARIABLE_DEFINITION:
        return variableDefinition != null;
      case DefinePackage.VARIABLE__UDT:
        return udt != null;
      case DefinePackage.VARIABLE__VARIANT:
        return variant != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (variableType: ");
    result.append(variableType);
    result.append(')');
    return result.toString();
  }

} //VariableImpl
