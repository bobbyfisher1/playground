/**
 * generated by Xtext 2.14.0
 */
package org.example.define.define.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.example.define.define.DefinePackage;
import org.example.define.define.UdtRef;
import org.example.define.define.UdtType;
import org.example.define.define.Variables;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Udt Ref</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.define.define.impl.UdtRefImpl#getUdtType <em>Udt Type</em>}</li>
 *   <li>{@link org.example.define.define.impl.UdtRefImpl#getUdtVariables <em>Udt Variables</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UdtRefImpl extends VariablesImpl implements UdtRef
{
  /**
   * The cached value of the '{@link #getUdtType() <em>Udt Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtType()
   * @generated
   * @ordered
   */
  protected UdtType udtType;

  /**
   * The cached value of the '{@link #getUdtVariables() <em>Udt Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtVariables()
   * @generated
   * @ordered
   */
  protected EList<Variables> udtVariables;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UdtRefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DefinePackage.Literals.UDT_REF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UdtType getUdtType()
  {
    if (udtType != null && udtType.eIsProxy())
    {
      InternalEObject oldUdtType = (InternalEObject)udtType;
      udtType = (UdtType)eResolveProxy(oldUdtType);
      if (udtType != oldUdtType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DefinePackage.UDT_REF__UDT_TYPE, oldUdtType, udtType));
      }
    }
    return udtType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UdtType basicGetUdtType()
  {
    return udtType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUdtType(UdtType newUdtType)
  {
    UdtType oldUdtType = udtType;
    udtType = newUdtType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.UDT_REF__UDT_TYPE, oldUdtType, udtType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variables> getUdtVariables()
  {
    if (udtVariables == null)
    {
      udtVariables = new EObjectContainmentEList<Variables>(Variables.class, this, DefinePackage.UDT_REF__UDT_VARIABLES);
    }
    return udtVariables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DefinePackage.UDT_REF__UDT_VARIABLES:
        return ((InternalEList<?>)getUdtVariables()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DefinePackage.UDT_REF__UDT_TYPE:
        if (resolve) return getUdtType();
        return basicGetUdtType();
      case DefinePackage.UDT_REF__UDT_VARIABLES:
        return getUdtVariables();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DefinePackage.UDT_REF__UDT_TYPE:
        setUdtType((UdtType)newValue);
        return;
      case DefinePackage.UDT_REF__UDT_VARIABLES:
        getUdtVariables().clear();
        getUdtVariables().addAll((Collection<? extends Variables>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.UDT_REF__UDT_TYPE:
        setUdtType((UdtType)null);
        return;
      case DefinePackage.UDT_REF__UDT_VARIABLES:
        getUdtVariables().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.UDT_REF__UDT_TYPE:
        return udtType != null;
      case DefinePackage.UDT_REF__UDT_VARIABLES:
        return udtVariables != null && !udtVariables.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //UdtRefImpl
