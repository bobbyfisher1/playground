/**
 * generated by Xtext 2.13.0
 */
package org.example.define.define.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.example.define.define.DefinePackage;
import org.example.define.define.Udt;
import org.example.define.define.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Udt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.define.define.impl.UdtImpl#getUdtName <em>Udt Name</em>}</li>
 *   <li>{@link org.example.define.define.impl.UdtImpl#getUdtType <em>Udt Type</em>}</li>
 *   <li>{@link org.example.define.define.impl.UdtImpl#getUdtVariables <em>Udt Variables</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UdtImpl extends MinimalEObjectImpl.Container implements Udt
{
  /**
   * The default value of the '{@link #getUdtName() <em>Udt Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtName()
   * @generated
   * @ordered
   */
  protected static final String UDT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUdtName() <em>Udt Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtName()
   * @generated
   * @ordered
   */
  protected String udtName = UDT_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getUdtType() <em>Udt Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtType()
   * @generated
   * @ordered
   */
  protected static final String UDT_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUdtType() <em>Udt Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtType()
   * @generated
   * @ordered
   */
  protected String udtType = UDT_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getUdtVariables() <em>Udt Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUdtVariables()
   * @generated
   * @ordered
   */
  protected EList<Variable> udtVariables;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UdtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DefinePackage.Literals.UDT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUdtName()
  {
    return udtName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUdtName(String newUdtName)
  {
    String oldUdtName = udtName;
    udtName = newUdtName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.UDT__UDT_NAME, oldUdtName, udtName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUdtType()
  {
    return udtType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUdtType(String newUdtType)
  {
    String oldUdtType = udtType;
    udtType = newUdtType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinePackage.UDT__UDT_TYPE, oldUdtType, udtType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getUdtVariables()
  {
    if (udtVariables == null)
    {
      udtVariables = new EObjectContainmentEList<Variable>(Variable.class, this, DefinePackage.UDT__UDT_VARIABLES);
    }
    return udtVariables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DefinePackage.UDT__UDT_VARIABLES:
        return ((InternalEList<?>)getUdtVariables()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DefinePackage.UDT__UDT_NAME:
        return getUdtName();
      case DefinePackage.UDT__UDT_TYPE:
        return getUdtType();
      case DefinePackage.UDT__UDT_VARIABLES:
        return getUdtVariables();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DefinePackage.UDT__UDT_NAME:
        setUdtName((String)newValue);
        return;
      case DefinePackage.UDT__UDT_TYPE:
        setUdtType((String)newValue);
        return;
      case DefinePackage.UDT__UDT_VARIABLES:
        getUdtVariables().clear();
        getUdtVariables().addAll((Collection<? extends Variable>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.UDT__UDT_NAME:
        setUdtName(UDT_NAME_EDEFAULT);
        return;
      case DefinePackage.UDT__UDT_TYPE:
        setUdtType(UDT_TYPE_EDEFAULT);
        return;
      case DefinePackage.UDT__UDT_VARIABLES:
        getUdtVariables().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DefinePackage.UDT__UDT_NAME:
        return UDT_NAME_EDEFAULT == null ? udtName != null : !UDT_NAME_EDEFAULT.equals(udtName);
      case DefinePackage.UDT__UDT_TYPE:
        return UDT_TYPE_EDEFAULT == null ? udtType != null : !UDT_TYPE_EDEFAULT.equals(udtType);
      case DefinePackage.UDT__UDT_VARIABLES:
        return udtVariables != null && !udtVariables.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (udtName: ");
    result.append(udtName);
    result.append(", udtType: ");
    result.append(udtType);
    result.append(')');
    return result.toString();
  }

} //UdtImpl
