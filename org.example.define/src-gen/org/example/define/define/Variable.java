/**
 * generated by Xtext 2.14.0
 */
package org.example.define.define;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Variable</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.example.define.define.Variable#isVariantKeyword <em>Variant Keyword</em>}</li>
 *   <li>{@link org.example.define.define.Variable#getVariableType <em>Variable Type</em>}</li>
 *   <li>{@link org.example.define.define.Variable#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.example.define.define.Variable#getRange <em>Range</em>}</li>
 *   <li>{@link org.example.define.define.Variable#isNextVariable <em>Next Variable</em>}</li>
 * </ul>
 *
 * @see org.example.define.define.DefinePackage#getVariable()
 * @model
 * @generated
 */
public interface Variable extends Variables
{
  /**
   * Returns the value of the '<em><b>Variant Keyword</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variant Keyword</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variant Keyword</em>' attribute.
   * @see #setVariantKeyword(boolean)
   * @see org.example.define.define.DefinePackage#getVariable_VariantKeyword()
   * @model
   * @generated
   */
  boolean isVariantKeyword();

  /**
   * Sets the value of the '{@link org.example.define.define.Variable#isVariantKeyword <em>Variant Keyword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variant Keyword</em>' attribute.
   * @see #isVariantKeyword()
   * @generated
   */
  void setVariantKeyword(boolean value);

  /**
   * Returns the value of the '<em><b>Variable Type</b></em>' attribute.
   * The literals are from the enumeration {@link org.example.define.define.BasicType}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable Type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable Type</em>' attribute.
   * @see org.example.define.define.BasicType
   * @see #setVariableType(BasicType)
   * @see org.example.define.define.DefinePackage#getVariable_VariableType()
   * @model
   * @generated
   */
  BasicType getVariableType();

  /**
   * Sets the value of the '{@link org.example.define.define.Variable#getVariableType <em>Variable Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable Type</em>' attribute.
   * @see org.example.define.define.BasicType
   * @see #getVariableType()
   * @generated
   */
  void setVariableType(BasicType value);

  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expression</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(Expression)
   * @see org.example.define.define.DefinePackage#getVariable_Expression()
   * @model containment="true"
   * @generated
   */
  Expression getExpression();

  /**
   * Sets the value of the '{@link org.example.define.define.Variable#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(Expression value);

  /**
   * Returns the value of the '<em><b>Range</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Range</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Range</em>' containment reference.
   * @see #setRange(Expression)
   * @see org.example.define.define.DefinePackage#getVariable_Range()
   * @model containment="true"
   * @generated
   */
  Expression getRange();

  /**
   * Sets the value of the '{@link org.example.define.define.Variable#getRange <em>Range</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Range</em>' containment reference.
   * @see #getRange()
   * @generated
   */
  void setRange(Expression value);

  /**
   * Returns the value of the '<em><b>Next Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Next Variable</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Next Variable</em>' attribute.
   * @see #setNextVariable(boolean)
   * @see org.example.define.define.DefinePackage#getVariable_NextVariable()
   * @model
   * @generated
   */
  boolean isNextVariable();

  /**
   * Sets the value of the '{@link org.example.define.define.Variable#isNextVariable <em>Next Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Next Variable</em>' attribute.
   * @see #isNextVariable()
   * @generated
   */
  void setNextVariable(boolean value);

} // Variable
